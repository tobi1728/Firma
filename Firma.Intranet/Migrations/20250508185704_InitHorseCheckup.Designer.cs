// <auto-generated />
using System;
using Firma.Intranet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Firma.Intranet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250508185704_InitHorseCheckup")]
    partial class InitHorseCheckup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Firma.Intranet.Models.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("HeightCm")
                        .HasColumnType("int")
                        .HasColumnName("HeightCm");

                    b.Property<DateTime?>("LastCheckup")
                        .HasColumnType("date");

                    b.Property<string>("MaxRiderLevel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaxRiderLevel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("WeightKg")
                        .HasColumnType("int")
                        .HasColumnName("WeightKg");

                    b.HasKey("Id");

                    b.ToTable("horses", (string)null);
                });

            modelBuilder.Entity("Firma.Intranet.Models.HorseCheckup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckupDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorseId")
                        .HasColumnType("int");

                    b.Property<int?>("HorseId1")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.HasIndex("HorseId1");

                    b.ToTable("HorseCheckups", (string)null);
                });

            modelBuilder.Entity("Firma.Intranet.Models.HorseCheckup", b =>
                {
                    b.HasOne("Firma.Intranet.Models.Horse", "Horse")
                        .WithMany()
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Intranet.Models.Horse", null)
                        .WithMany("Checkups")
                        .HasForeignKey("HorseId1");

                    b.Navigation("Horse");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Horse", b =>
                {
                    b.Navigation("Checkups");
                });
#pragma warning restore 612, 618
        }
    }
}
